package iu;

import java.awt.Container;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import crypto.Certificados;

public class Listado extends JFrame implements KeyStoreInfo, ActionListener{

	private String keystore;
	private String[] certificados;
	private char[] storepass;
	private JComboBox listaCerts;
	
	private JLabel jlAlias = new JLabel("Alias:");
	private JTextArea taInfo = new JTextArea();
	
	private JButton jbVerTodos = new JButton("Ver todos");
	
	public Listado(File keystore){
		if(keystore != null)
			this.keystore = keystore.getAbsolutePath();
		else
			this.keystore = System.getProperty("user.home")+"\\.keystore";
		new KeyStoreOpen(this);
	}
	
	public String getKeystorePath() {
		// TODO Auto-generated method stub
		return keystore;
	}
	
	private void setInfoText(){
		Certificados cert = new Certificados();
		String alias = (String)listaCerts.getSelectedItem();
		String info = cert.infoCertificado(storepass, keystore, alias);
		taInfo.setText(info);
	}

	public void mostrar() {
		// TODO Auto-generated method stub
		this.setTitle("Listar certificado");
		this.setSize(500,250);
		
		listaCerts = new JComboBox(certificados);
		listaCerts.addActionListener(this);
		
		GridBagLayout gbl = new GridBagLayout();
		GridBagConstraints gbc = new GridBagConstraints();
		Container c = this.getContentPane();
		
		gbc.fill = GridBagConstraints.BOTH;
		gbc.weighty = 1;
		gbc.weightx = 1;
		c.setLayout(gbl);
		
		JPanel jp1 = new JPanel();
		JPanel jpA = new JPanel();	
		JPanel jpB = new JPanel();
		gbc.gridx = 0;
		gbc.gridy = 0;
		jpA.add(jlAlias);
		jlAlias.setToolTipText("Elije el certificado a consultar");
		gbc.gridx = 1;
		gbc.gridy = 0;
		jpB.add(listaCerts);
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.weighty = 0.2;
		jp1.add(jpA);
		jp1.add(jpB);		
		gbl.setConstraints(jp1, gbc);
		c.add(jp1);
		
		jp1 = new JPanel();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.weighty = 0.8;
		taInfo.setEditable(false);
		taInfo.setSize(400, 150);
		taInfo.setText("Probando\nProbando\n1,2");
		jp1.add(taInfo);
		gbl.setConstraints(jp1, gbc);
		c.add(jp1);
		
		this.setVisible(true);
	}

	public void setCertificados(String[] certificados) {
		this.certificados = certificados;
	}

	public void setStorePass(char[] sp) {
		storepass = sp;
	}

	public void actionPerformed(ActionEvent e) {
		try{
			if(((JButton)e.getSource()).equals(jbVerTodos)){
				
			}
		}catch(Exception exc){
			
		}
		try{
			if(((JComboBox)e.getSource()).equals(listaCerts)){
				//System.out.println(e.getActionCommand());
				if(e.getActionCommand().equalsIgnoreCase("comboBoxChanged")){
					System.out.println("WOW");
					Certificados cert = new Certificados();
					String alias = (String)listaCerts.getSelectedItem();
					String info = cert.infoCertificado(storepass, keystore, alias);
					System.out.println(info);
				}
			}
		}catch(Exception exc){
			
		}
	}

}
